{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\LinksList.js\";\n\n/** @format */\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Alert from \"./Alert\";\nimport Table from \"react-bootstrap/Table\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport \"../components/main.css\";\nimport { deletelink } from \"../actions/Link\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst LinksList = ({\n  deletelink\n}) => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(7);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/links\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const deleteLinkFromList = postId => {\n    deletelink(postId);\n    setposts(prev => prev.filter(a => a._id !== postId));\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\"); //Delete and update a link\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Link Description\"))), currentPosts.map(post => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/UpdateLink/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-warning btn-sm\",\n    variant: \"outline-warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }, \"Update\")), \" \")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deleteLinkFromList(post._id),\n    className: \"btn btn-danger btn-sm\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \" \", \"Delete\"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, post.LinkDiscription)))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/AddLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \" Add new Link\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }))));\n};\n\nLinksList.propTypes = {\n  linkslist: PropTypes.array.isRequired,\n  deletelink: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deletelink\n})(LinksList);","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/LinksList.js"],"names":["React","useEffect","useState","Fragment","Alert","Table","Spinner","Pagination","axios","deletelink","Link","Button","PropTypes","connect","LinksList","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","deleteLinkFromList","postId","prev","filter","a","_id","map","post","textAlign","color","LinkDiscription","marginLeft","length","propTypes","linkslist","array","isRequired","func"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport Alert from \"./Alert\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport Pagination from \"../DashboardComponents/Pagenation\";\r\nimport axios from \"axios\";\r\nimport \"../components/main.css\";\r\nimport { deletelink } from \"../actions/Link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LinksList = ({ deletelink }) => {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(7);\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/links\");\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n  //change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const deleteLinkFromList = (postId) => {\r\n    deletelink(postId);\r\n    setposts((prev) => prev.filter((a) => a._id !== postId));\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n    );\r\n\r\n  //Delete and update a link\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n      <div>\r\n        <Table striped bordered>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"thcolor\">Update</th>\r\n              <th className=\"thcolor\">Delete</th>\r\n              <th className=\"thcolor\">Link Description</th>\r\n            </tr>\r\n          </thead>\r\n          {currentPosts.map((post) => (\r\n            <tbody>\r\n              <tr>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Link to={`/UpdateLink/${post._id}`}>\r\n                    {\" \"}\r\n                    <Button\r\n                      className=\"btn btn-warning btn-sm\"\r\n                      variant=\"outline-warning\"\r\n                      size=\"sm\">\r\n                      {\" \"}\r\n                      <text style={{ color: \"black\" }}>Update</text>\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </td>\r\n\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Button\r\n                    onClick={() => deleteLinkFromList(post._id)}\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    size=\"sm\">\r\n                    {\" \"}\r\n                    Delete\r\n                  </Button>{\" \"}\r\n                </td>\r\n\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <text className=\"videotitlestyle \">\r\n                    {post.LinkDiscription}\r\n                  </text>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </Table>\r\n        <div style={{ marginLeft: \"10px\" }}>\r\n          <Link to=\"/AddLink\"> Add new Link</Link>\r\n        </div>\r\n        <div>\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={posts.length}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLinksList.propTypes = {\r\n  linkslist: PropTypes.array.isRequired,\r\n  deletelink: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deletelink })(LinksList);\r\n"]},"metadata":{},"sourceType":"module"}