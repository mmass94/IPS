{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\fetchposts.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Videos from \"../Pages/Videos\";\nimport Pagenation from \"./Pagenation\";\nimport axios from \"axios\";\nimport { laodUser } from \"../actions/auth\";\nimport store from \"../store\";\n\nconst Fetchposts = () => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, SetCurrentPage] = useState(1);\n  const [postsPerPage] = useState(9);\n  useEffect(() => {\n    store.dispatch(laodUser());\n\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); //get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => {\n    SetCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Videos, {\n    posts: posts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Pagenation, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default Fetchposts;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/fetchposts.js"],"names":["React","Fragment","useEffect","useState","Videos","Pagenation","axios","laodUser","store","Fetchposts","posts","setposts","loading","setLoading","CurrentPage","SetCurrentPage","postsPerPage","dispatch","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAqBV,QAAQ,CAAC,CAAC,KAAD,CAAD,CAAnC;AACA,QAAM,CAACW,WAAD,EAAaC,cAAb,IAA6BZ,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACa,YAAD,IAAeb,QAAQ,CAAC,CAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACS,QAAN,CAAeV,QAAQ,EAAvB;;AAEJ,UAAMW,UAAU,GAAC,YAAS;AAC1BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAC,MAAMb,KAAK,CACpBc,GADe,CACX,kCADW,CAAhB;AAEAT,MAAAA,QAAQ,CAACQ,GAAG,CAACE,IAAL,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACK,KANL;;AAOIK,IAAAA,UAAU;AACb,GAXU,EAWR,EAXQ,CAAT,CANqB,CAmBzB;;AACA,QAAMI,gBAAgB,GAACR,WAAW,GAACE,YAAnC;AACA,QAAMO,iBAAiB,GAACD,gBAAgB,GAACN,YAAzC;AACA,QAAMQ,YAAY,GAACd,KAAK,CAACe,KAAN,CAAYF,iBAAZ,EAA8BD,gBAA9B,CAAnB,CAtByB,CAwBzB;;AAEA,QAAMI,QAAQ,GAAEC,UAAD,IAAc;AAC3BZ,IAAAA,cAAc,CAACY,UAAD,CAAd;AACD,GAFD;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEjB,KAAf;AAAsB,IAAA,OAAO,EAAEE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,eAEF,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAEI,YAA1B;AAAwC,IAAA,UAAU,EAAEN,KAAK,CAACkB,MAA1D;AAAkE,IAAA,QAAQ,EAAEF,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,CADF;AAOC,CApCD;;AAqCA,eAAejB,UAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Videos from \"../Pages/Videos\";\r\nimport Pagenation from \"./Pagenation\"\r\nimport axios from \"axios\";\r\nimport { laodUser } from \"../actions/auth\";\r\nimport store from \"../store\";\r\n\r\n\r\nconst Fetchposts = () => {\r\n    const [posts,setposts]=useState([]);\r\n    const [loading,setLoading]=useState([false]);\r\n    const [CurrentPage,SetCurrentPage]=useState(1);\r\n    const [postsPerPage]=useState(9);\r\n  \r\n    useEffect(() => {\r\n      store.dispatch(laodUser());\r\n  \r\n  const fetchPosts=async()=>{\r\n  setLoading(true);\r\n  const res=await axios\r\n  .get(\"http://localhost:5000/api/videos\")\r\n  setposts(res.data);\r\n  setLoading(false);\r\n      }\r\n      fetchPosts();\r\n  }, []);\r\n\r\n//get Current Posts\r\nconst indexOfLastVideo=CurrentPage*postsPerPage;\r\nconst indexOfFirstVideo=indexOfLastVideo-postsPerPage;\r\nconst currentPosts=posts.slice(indexOfFirstVideo,indexOfLastVideo);\r\n\r\n//change Page \r\n\r\nconst paginate=(pageNumber)=>{\r\n  SetCurrentPage(pageNumber)\r\n}\r\nreturn (\r\n  <div>\r\n<Videos posts={posts} loading={loading} />\r\n<Pagenation postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\r\n</div>\r\n);\r\n\r\n}\r\nexport default Fetchposts;\r\n "]},"metadata":{},"sourceType":"module"}