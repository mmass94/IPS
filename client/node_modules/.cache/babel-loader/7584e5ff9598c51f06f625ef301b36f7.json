{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactClass = require(\"./ReactClass\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\n\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n  render: function () {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n  componentDidMount: function () {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\nmodule.exports = ReactDOMForm;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/ReactDOMForm.js"],"names":["EventConstants","require","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactClass","ReactElement","form","createFactory","ReactDOMForm","createClass","displayName","tagName","mixins","render","props","componentDidMount","trapBubbledEvent","topLevelTypes","topReset","topSubmit","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIK,IAAI,GAAGD,YAAY,CAACE,aAAb,CAA2B,MAA3B,CAAX;AAEA;;;;;;;AAMA,IAAIC,YAAY,GAAGJ,UAAU,CAACK,WAAX,CAAuB;AACxCC,EAAAA,WAAW,EAAE,cAD2B;AAExCC,EAAAA,OAAO,EAAE,MAF+B;AAIxCC,EAAAA,MAAM,EAAE,CAACT,0BAAD,EAA6BD,mBAA7B,CAJgC;AAMxCW,EAAAA,MAAM,EAAE,YAAW;AACjB;AACA;AACA;AACA,WAAOP,IAAI,CAAC,KAAKQ,KAAN,CAAX;AACD,GAXuC;AAaxCC,EAAAA,iBAAiB,EAAE,YAAW;AAC5B,SAAKC,gBAAL,CAAsBhB,cAAc,CAACiB,aAAf,CAA6BC,QAAnD,EAA6D,OAA7D;AACA,SAAKF,gBAAL,CAAsBhB,cAAc,CAACiB,aAAf,CAA6BE,SAAnD,EAA8D,QAA9D;AACD;AAhBuC,CAAvB,CAAnB;AAmBAC,MAAM,CAACC,OAAP,GAAiBb,YAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n"]},"metadata":{},"sourceType":"script"}