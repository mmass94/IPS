{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\Pages\\\\Links.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../components/main.css\";\n\nfunction Links(props) {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(9);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/links\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\");\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"linksimagestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"stylemaincontent\",\n    style: {\n      marginTop: \"-175px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \" \", \"\\u0631\\u0648\\u0627\\u0628\\u0637\")), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    className: \"tablestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"\\u0627\\u0644\\u0631\\u0627\\u0628\\u0637\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"\\u0627\\u0644\\u0648\\u0635\\u0641\"))), currentPosts.map(post => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: post.LinkString,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, post.LinkString)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"tableDescription\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" \", post.LinkDiscription))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Links;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/Pages/Links.js"],"names":["React","Fragment","useEffect","useState","Spinner","Pagination","axios","Container","Col","Table","Row","Links","props","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","marginTop","map","post","LinkString","textAlign","LinkDiscription","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport Pagination from \"../DashboardComponents/Pagenation\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"../components/main.css\";\r\nfunction Links(props) {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(9);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/links\");\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div className=\"linksimagestyle\"></div>\r\n        <Row className=\"justify-content-center\">\r\n          <text className=\"stylemaincontent\" style={{ marginTop: \"-175px\" }}>\r\n            {\" \"}\r\n            روابط\r\n          </text>\r\n        </Row>\r\n        <Table striped bordered hover className=\"tablestyle \">\r\n          <thead>\r\n            <tr>\r\n              <th>الرابط</th>\r\n              <th>الوصف</th>\r\n            </tr>\r\n          </thead>\r\n          {currentPosts.map((post) => (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <a\r\n                    href={post.LinkString}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\">\r\n                    {post.LinkString}\r\n                  </a>\r\n                </td>\r\n                <td\r\n                  className=\"tableDescription\"\r\n                  style={{ textAlign: \"center\" }}>\r\n                  {\" \"}\r\n                  {post.LinkDiscription}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </Table>\r\n        <div>\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={posts.length}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n"]},"metadata":{},"sourceType":"module"}