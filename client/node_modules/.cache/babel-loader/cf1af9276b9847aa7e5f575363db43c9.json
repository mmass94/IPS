{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\Pages\\\\Questions.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport \"../components/main.css\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Questions(props) {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(9);\n  const [open1, setOpen1] = useState({});\n\n  function onClick(evt) {\n    setOpen1({\n      [evt.target.name]: {\n        value: evt.target.name\n      }\n    });\n  }\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/questions\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Questionsimagestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"stylemaincontent\",\n    style: {\n      marginTop: \"-175px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \" \", \"\\u0623\\u0633\\u0626\\u0644\\u0629\")), currentPosts.map(post => /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionrectangle \",\n    onClick: onClick,\n    name: \"step-one\",\n    \"aria-controls\": \"example-collapse-text\",\n    \"aria-expanded\": open1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questiontext \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \" \", post.QString)), /*#__PURE__*/React.createElement(Collapse, {\n    onClick: onClick,\n    name: \"step-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"questionanswer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, post.Answer)))), /*#__PURE__*/React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    className: \"text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Questions;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/Pages/Questions.js"],"names":["React","Fragment","useEffect","useState","Spinner","Pagination","axios","Container","Col","Collapse","Row","Questions","props","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","open1","setOpen1","onClick","evt","target","name","value","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","marginTop","map","post","QString","Answer","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport Pagination from \"../DashboardComponents/Pagenation\";\r\nimport axios from \"axios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport \"../components/main.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nfunction Questions(props) {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(9);\r\n  const [open1, setOpen1] = useState({});\r\n\r\n  function onClick(evt) {\r\n    setOpen1({\r\n      [evt.target.name]: {\r\n        value: evt.target.name,\r\n      },\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/questions\");\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      <div className=\"Questionsimagestyle\"> </div>\r\n      <Row className=\"justify-content-center\">\r\n        <text className=\"stylemaincontent\" style={{ marginTop: \"-175px\" }}>\r\n          {\" \"}\r\n          أسئلة\r\n        </text>\r\n      </Row>\r\n      {currentPosts.map((post) => (\r\n        <Container fluid={true} className=\"text-center\">\r\n          <div\r\n            className=\"questionrectangle \"\r\n            onClick={onClick}\r\n            name=\"step-one\"\r\n            aria-controls=\"example-collapse-text\"\r\n            aria-expanded={open1}>\r\n            <p className=\"questiontext \"> {post.QString}</p>\r\n          </div>\r\n          <Collapse onClick={onClick} name=\"step-two\">\r\n            <p className=\"questionanswer\">{post.Answer}</p>\r\n          </Collapse>\r\n        </Container>\r\n      ))}\r\n      <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"text-center \">\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={posts.length}\r\n          paginate={paginate}\r\n        />\r\n      </Col>\r\n    </div>\r\n  );\r\n}\r\nexport default Questions;\r\n"]},"metadata":{},"sourceType":"module"}