{"ast":null,"code":"/** @format */\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { Link_ADDED, Link_ERROR, UPDATE_Link, Delete_ERROR } from \"./types\"; // ADD Link\n\nexport const addLink = (LinkString, LinkDiscription) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    LinkString,\n    LinkDiscription\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/links\", body, config);\n    dispatch({\n      type: Link_ADDED,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Link has been added\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: Link_ERROR\n    });\n  }\n}; //Delete a Link\n\nexport const deletelink = id => async dispatch => {\n  if (window.confirm(\"Are you sure ? this is can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(`http://localhost:5000/api/links/${id}`);\n      dispatch({\n        type: UPDATE_Link\n      });\n      dispatch(setAlert(\"link has been Deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: Delete_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/actions/Link.js"],"names":["axios","setAlert","Link_ADDED","Link_ERROR","UPDATE_Link","Delete_ERROR","addLink","LinkString","LinkDiscription","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg","deletelink","id","window","confirm","delete","statusText","status"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,YAA9C,QAAkE,SAAlE,C,CAEA;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,UAAD,EAAaC,eAAb,KAAiC,MAAOC,QAAP,IAAoB;AAC1E,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BP,IAAAA,UAD0B;AAE1BC,IAAAA;AAF0B,GAAf,CAAb;;AAIA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAChB,iCADgB,EAEhBJ,IAFgB,EAGhBF,MAHgB,CAAlB;AAMAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf,UADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAACR,QAAQ,CAAC,qBAAD,EAAwB,SAAxB,CAAT,CAAR;AACD,GAZD,CAYE,OAAOmB,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWf,QAAQ,CAACR,QAAQ,CAACuB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD;AACF,CAhCM,C,CAkCP;;AACA,OAAO,MAAMuB,UAAU,GAAIC,EAAD,IAAQ,MAAOlB,QAAP,IAAoB;AACpD,MAAImB,MAAM,CAACC,OAAP,CAAe,2CAAf,CAAJ,EAAiE;AAC/D,QAAI;AACF,YAAMd,GAAG,GAAG,MAAMf,KAAK,CAAC8B,MAAN,CAAc,mCAAkCH,EAAG,EAAnD,CAAlB;AACAlB,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEb;AADC,OAAD,CAAR;AAGAK,MAAAA,QAAQ,CAACR,QAAQ,CAAC,uBAAD,EAA0B,SAA1B,CAAT,CAAR;AACD,KAND,CAME,OAAOmB,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEZ,YADC;AAEPa,QAAAA,OAAO,EAAE;AAAEO,UAAAA,GAAG,EAAEL,GAAG,CAACE,QAAJ,CAAaS,UAApB;AAAgCC,UAAAA,MAAM,EAAEZ,GAAG,CAACE,QAAJ,CAAaU;AAArD;AAFF,OAAD,CAAR;AAID;AACF;AACF,CAfM","sourcesContent":["/** @format */\r\n\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { Link_ADDED, Link_ERROR, UPDATE_Link, Delete_ERROR } from \"./types\";\r\n\r\n// ADD Link\r\n\r\nexport const addLink = (LinkString, LinkDiscription) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({\r\n    LinkString,\r\n    LinkDiscription,\r\n  });\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/api/links\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: Link_ADDED,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Link has been added\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: Link_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Delete a Link\r\nexport const deletelink = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure ? this is can NOT be undone!\")) {\r\n    try {\r\n      const res = await axios.delete(`http://localhost:5000/api/links/${id}`);\r\n      dispatch({\r\n        type: UPDATE_Link,\r\n      });\r\n      dispatch(setAlert(\"link has been Deleted\", \"success\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: Delete_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}