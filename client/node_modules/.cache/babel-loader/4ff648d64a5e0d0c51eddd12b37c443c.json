{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\auth\\\\register.js\";\n\n/** @format */\nimport React, { Fragment, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../components/main.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\nimport Alert from \"../Alert\";\nimport { connect } from \"react-redux\"; //Redux\n\nconst Register = ({\n  setAlert,\n  register\n}) => {\n  const [formData, setFormData] = useState({\n    FullName: \"\",\n    Username: \"\",\n    Password: \"\",\n    PasswordConfirmation: \"\"\n  });\n  const {\n    FullName,\n    Username,\n    Password,\n    PasswordConfirmation\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (Password !== PasswordConfirmation) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register(FullName, Username, Password);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"form LoginForm upspace\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    lg: 3,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: FullName,\n    name: \"FullName\",\n    placeholder: \"\\u0627\\u0644\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    lg: 3,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: Username,\n    name: \"Username\",\n    placeholder: \"\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0645\\u0633\\u062A\\u062E\\u062F\\u0645\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    lg: 3,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"Password\",\n    value: Password,\n    name: \"Password\",\n    placeholder: \"\\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 3,\n    lg: 3,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"Password\",\n    value: PasswordConfirmation,\n    name: \"PasswordConfirmation\",\n    placeholder: \"\\u062A\\u0623\\u0643\\u064A\\u062F \\u0643\\u0644\\u0645\\u0629 \\u0627\\u0644\\u0645\\u0631\\u0648\\u0631\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-info\",\n    size: \"md\",\n    className: \"AddUser\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"\\u0625\\u0636\\u0627\\u0641\\u0629 \\u0645\\u0633\\u062A\\u062E\\u062F\\u0645\"), \" \")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footerspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/auth/register.js"],"names":["React","Fragment","useState","Form","Row","Col","Button","setAlert","register","PropTypes","Alert","connect","Register","formData","setFormData","FullName","Username","Password","PasswordConfirmation","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","isAuthenticated","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React, { Fragment, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../../components/main.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport Alert from \"../Alert\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//Redux\r\nconst Register = ({ setAlert, register }) => {\r\n  const [formData, setFormData] = useState({\r\n    FullName: \"\",\r\n    Username: \"\",\r\n    Password: \"\",\r\n    PasswordConfirmation: \"\",\r\n  });\r\n\r\n  const { FullName, Username, Password, PasswordConfirmation } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (Password !== PasswordConfirmation) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register(FullName, Username, Password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n      <Form className=\"form LoginForm upspace\" onSubmit={(e) => onSubmit(e)}>\r\n        <Row className=\"justify-content-center \">\r\n          <Col xl={3} lg={3} md={6} sm={12} xs={12}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={FullName}\r\n              name=\"FullName\"\r\n              placeholder=\"الاسم الكامل \"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col xl={3} lg={3} md={6} sm={12} xs={12}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={Username}\r\n              name=\"Username\"\r\n              placeholder=\"اسم المستخدم\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col xl={3} lg={3} md={6} sm={12} xs={12}>\r\n            {\" \"}\r\n            <Form.Control\r\n              type=\"Password\"\r\n              value={Password}\r\n              name=\"Password\"\r\n              placeholder=\"كلمة المرور\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col xl={3} lg={3} md={6} sm={12} xs={12}>\r\n            {\" \"}\r\n            <Form.Control\r\n              type=\"Password\"\r\n              value={PasswordConfirmation}\r\n              name=\"PasswordConfirmation\"\r\n              placeholder=\"تأكيد كلمة المرور\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Row className=\"justify-content-center \">\r\n            <Button\r\n              variant=\"outline-info\"\r\n              size=\"md\"\r\n              className=\"AddUser\"\r\n              type=\"submit\"\r\n            >\r\n              إضافة مستخدم\r\n            </Button>{\" \"}\r\n          </Row>\r\n        </Row>\r\n        <hr></hr>\r\n      </Form>\r\n      <div className=\"footerspace\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}