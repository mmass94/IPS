{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\App2.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Videos from \"./Pages/Videos\";\nimport Pagination from \"./DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { laodUser } from \"./actions/auth\";\n\nconst App2 = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  useEffect(() => {\n    store.dispatch(laodUser());\n\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Videos, {\n    posts: currentPosts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App2;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/App2.js"],"names":["React","Fragment","useEffect","useState","Videos","Pagination","axios","Provider","store","laodUser","App2","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","dispatch","fetchPosts","res","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,YAAD,IAAiBd,QAAQ,CAAC,CAAD,CAA/B;AAKAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACU,QAAN,CAAeT,QAAQ,EAAvB;;AAEA,UAAMU,UAAU,GAAG,YAAY;AAC7BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,kCAAV,CAAlB;AACAT,MAAAA,QAAQ,CAACQ,GAAG,CAACE,IAAL,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAK,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT,CATiB,CAsBjB;;AACA,QAAMI,eAAe,GAAGR,WAAW,GAAGE,YAAtC;AACA,QAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAA3C;AACA,QAAMQ,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAzBiB,CA2BjB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIZ,cAAc,CAACY,UAAD,CAA7C;;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,YAAf;AAA6B,IAAA,OAAO,EAAEZ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACkB,MAFpB;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF,CADF;AAcD,CA5CD;;AA8CA,eAAejB,IAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Videos from \"./Pages/Videos\";\r\nimport Pagination from \"./DashboardComponents/Pagenation\"\r\nimport axios from \"axios\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { laodUser } from \"./actions/auth\";\r\n\r\n\r\nconst App2 = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    store.dispatch(laodUser());\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\r\n      setPosts(res.data);\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <Provider>    \r\n      <div>\r\n      <Videos posts={currentPosts} loading={loading} />\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n\r\n    </Provider>\r\n\r\n  );\r\n};\r\n\r\nexport default App2;"]},"metadata":{},"sourceType":"module"}