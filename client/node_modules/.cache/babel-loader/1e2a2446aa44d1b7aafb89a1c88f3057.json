{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\Pages\\\\Videos.js\";\n\n/** @format */\nimport React from \"react\";\nimport \"../components/main.css\";\nimport Col from \"react-bootstrap/Col\";\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\nimport hvr from \"hover.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"./DashboardComponents/Pagenation\";\nimport axios from \"axios\";\n\nconst Videos = () => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, SetCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-center mb-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Loading... !!\"), /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n  useEffect(() => {\n    store.dispatch(laodUser());\n\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => {\n    SetCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, posts && posts.map(post => /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 4,\n    lg: 4,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveEmbed, {\n    aspectRatio: \"16by9\",\n    className: \"iframcustom hvr-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"embed\", {\n    src: post.VideoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"videotitlestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, post.VideoTitle), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"videotextstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \" \", post.VideoSummary))), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Videos;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/Pages/Videos.js"],"names":["React","Col","ResponsiveEmbed","hvr","Container","Spinner","Pagination","axios","Videos","posts","setposts","useState","loading","setLoading","CurrentPage","SetCurrentPage","postsPerPage","useEffect","store","dispatch","laodUser","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","map","post","VideoLink","VideoTitle","VideoSummary","length"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React from \"react\";\r\nimport \"../components/main.css\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\nimport hvr from \"hover.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"../components/layout/Spinner\"\r\nimport Pagination from \"./DashboardComponents/Pagenation\"\r\nimport axios from \"axios\";\r\n\r\nconst Videos = () => {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, SetCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(2);\r\n  if (loading) {\r\n    return (\r\n      <div><h6 className=\"text-center mb-10\">Loading... !!</h6>\r\n        <Spinner /> </div>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    store.dispatch(laodUser());\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios\r\n        .get(\"http://localhost:5000/api/videos\")\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    }\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page \r\n\r\n  const paginate = (pageNumber) => {\r\n    SetCurrentPage(pageNumber)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {posts && posts.map(post => (\r\n        <Container fluid={true}>\r\n\r\n          <Col xl={4} lg={4} md={6} sm={12} xs={12} >\r\n            <div className=\"text-center\">\r\n              <ResponsiveEmbed\r\n                aspectRatio=\"16by9\"\r\n                className=\"iframcustom hvr-grow\"\r\n              >\r\n                <embed src={post.VideoLink} />\r\n              </ResponsiveEmbed>\r\n              <h6 className=\"videotitlestyle\">{post.VideoTitle}</h6>\r\n              <p className=\"videotextstyle\"> {post.VideoSummary}</p>\r\n            </div>\r\n          </Col>\r\n          <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\r\n\r\n        </Container>\r\n\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Videos;\r\n"]},"metadata":{},"sourceType":"module"}