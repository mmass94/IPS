{"ast":null,"code":"const OBJECT_PROTOTYPE_KEYS = Object.getOwnPropertyNames(Object.prototype);\nconst ARRAY_PROTOTYPE_KEYS = Object.getOwnPropertyNames(Array.prototype);\n\nmodule.exports = function (data) {\n  if (!data || data.length < 1) return {};\n  let d = {},\n      keys = Object.keys(data);\n\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i],\n        value = data[key],\n        current = d,\n        keyParts = key.replace(new RegExp(/\\[/g), '.').replace(new RegExp(/\\]/g), '').split('.');\n\n    for (let index = 0; index < keyParts.length; index++) {\n      let k = keyParts[index]; // Ensure we don't allow prototype pollution\n\n      const IN_ARRAY_PROTOTYPE = ARRAY_PROTOTYPE_KEYS.includes(k) && Array.isArray(current);\n\n      if (OBJECT_PROTOTYPE_KEYS.includes(k) || IN_ARRAY_PROTOTYPE) {\n        continue;\n      }\n\n      if (index >= keyParts.length - 1) {\n        current[k] = value;\n      } else {\n        if (!current[k]) current[k] = !isNaN(keyParts[index + 1]) ? [] : {};\n        current = current[k];\n      }\n    }\n  }\n\n  return d;\n};","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/express-fileupload/lib/processNested.js"],"names":["OBJECT_PROTOTYPE_KEYS","Object","getOwnPropertyNames","prototype","ARRAY_PROTOTYPE_KEYS","Array","module","exports","data","length","d","keys","i","key","value","current","keyParts","replace","RegExp","split","index","k","IN_ARRAY_PROTOTYPE","includes","isArray","isNaN"],"mappings":"AAAA,MAAMA,qBAAqB,GAAGC,MAAM,CAACC,mBAAP,CAA2BD,MAAM,CAACE,SAAlC,CAA9B;AACA,MAAMC,oBAAoB,GAAGH,MAAM,CAACC,mBAAP,CAA2BG,KAAK,CAACF,SAAjC,CAA7B;;AAGAG,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC7B,MAAI,CAACA,IAAD,IAASA,IAAI,CAACC,MAAL,GAAc,CAA3B,EAA8B,OAAO,EAAP;AAE9B,MAAIC,CAAC,GAAG,EAAR;AAAA,MACEC,IAAI,GAAGV,MAAM,CAACU,IAAP,CAAYH,IAAZ,CADT;;AAGA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACF,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,QAAIC,GAAG,GAAGF,IAAI,CAACC,CAAD,CAAd;AAAA,QACEE,KAAK,GAAGN,IAAI,CAACK,GAAD,CADd;AAAA,QAEEE,OAAO,GAAGL,CAFZ;AAAA,QAGEM,QAAQ,GAAGH,GAAG,CACXI,OADQ,CACA,IAAIC,MAAJ,CAAW,KAAX,CADA,EACmB,GADnB,EAERD,OAFQ,CAEA,IAAIC,MAAJ,CAAW,KAAX,CAFA,EAEmB,EAFnB,EAGRC,KAHQ,CAGF,GAHE,CAHb;;AAQA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,QAAQ,CAACP,MAArC,EAA6CW,KAAK,EAAlD,EAAqD;AACnD,UAAIC,CAAC,GAAGL,QAAQ,CAACI,KAAD,CAAhB,CADmD,CAGnD;;AACA,YAAME,kBAAkB,GAAGlB,oBAAoB,CAACmB,QAArB,CAA8BF,CAA9B,KAAoChB,KAAK,CAACmB,OAAN,CAAcT,OAAd,CAA/D;;AACA,UAAIf,qBAAqB,CAACuB,QAAtB,CAA+BF,CAA/B,KAAqCC,kBAAzC,EAA6D;AAC3D;AACD;;AAED,UAAIF,KAAK,IAAIJ,QAAQ,CAACP,MAAT,GAAkB,CAA/B,EAAiC;AAC/BM,QAAAA,OAAO,CAACM,CAAD,CAAP,GAAaP,KAAb;AACD,OAFD,MAEO;AACL,YAAI,CAACC,OAAO,CAACM,CAAD,CAAZ,EAAiBN,OAAO,CAACM,CAAD,CAAP,GAAa,CAACI,KAAK,CAACT,QAAQ,CAACI,KAAK,GAAG,CAAT,CAAT,CAAN,GAA8B,EAA9B,GAAmC,EAAhD;AACjBL,QAAAA,OAAO,GAAGA,OAAO,CAACM,CAAD,CAAjB;AACD;AACF;AACF;;AAID,SAAOX,CAAP;AACD,CApCD","sourcesContent":["const OBJECT_PROTOTYPE_KEYS = Object.getOwnPropertyNames(Object.prototype);\nconst ARRAY_PROTOTYPE_KEYS = Object.getOwnPropertyNames(Array.prototype);\n\n\nmodule.exports = function(data){\n  if (!data || data.length < 1) return {};\n  \n  let d = {},\n    keys = Object.keys(data);\n\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i],\n      value = data[key],\n      current = d,\n      keyParts = key\n        .replace(new RegExp(/\\[/g), '.')\n        .replace(new RegExp(/\\]/g), '')\n        .split('.');  \n\n    for (let index = 0; index < keyParts.length; index++){\n      let k = keyParts[index];\n\n      // Ensure we don't allow prototype pollution\n      const IN_ARRAY_PROTOTYPE = ARRAY_PROTOTYPE_KEYS.includes(k) && Array.isArray(current);\n      if (OBJECT_PROTOTYPE_KEYS.includes(k) || IN_ARRAY_PROTOTYPE) {\n        continue;\n      }\n\n      if (index >= keyParts.length - 1){\n        current[k] = value;\n      } else {\n        if (!current[k]) current[k] = !isNaN(keyParts[index + 1]) ? [] : {};\n        current = current[k];\n      }\n    }\n  }\n  \n  \n  \n  return d;\n};\n"]},"metadata":{},"sourceType":"script"}