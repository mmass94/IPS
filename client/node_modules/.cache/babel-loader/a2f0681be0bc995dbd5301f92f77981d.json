{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\IPS\\\\client\\\\src\\\\Pages\\\\Videos.js\";\n\n/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"../components/main.css\";\nimport Col from \"react-bootstrap/Col\";\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\nimport hvr from \"hover.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport \"../components/main.css\";\n\nconst Videos = () => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(9);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\");\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"videomagestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"stylemaincontent\",\n    style: {\n      marginTop: \"-175px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \" \", \"\\u0641\\u064A\\u062F\\u064A\\u0648\\u0647\\u0627\\u062A\")), currentPosts.map(post => /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 4,\n    lg: 4,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    className: \"videosmargin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveEmbed, {\n    aspectRatio: \"16by9\",\n    className: \"iframcustom hvr-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"embed\", {\n    src: post.VideoLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"videotitlestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, post.VideoTitle), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"videotextstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \" \", post.VideoSummary))))), /*#__PURE__*/React.createElement(Col, {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    className: \"text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Videos;","map":{"version":3,"sources":["C:/Users/apollo/IPS/client/src/Pages/Videos.js"],"names":["React","Fragment","useEffect","useState","Col","ResponsiveEmbed","hvr","Row","Container","Spinner","Pagination","axios","Videos","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","marginTop","map","post","VideoLink","VideoTitle","VideoSummary","length"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../components/main.css\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ResponsiveEmbed from \"react-bootstrap/ResponsiveEmbed\";\r\nimport hvr from \"hover.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"../components/layout/Spinner\"\r\nimport Pagination from \"../DashboardComponents/Pagenation\"\r\nimport axios from \"axios\";\r\nimport \"../components/main.css\";\r\n\r\n\r\nconst Videos = () => {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(9);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios\r\n        .get(\"http://localhost:5000/api/videos\")\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    }\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page \r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n\r\n    )\r\n\r\n  return (\r\n        <Fragment>\r\n\r\n    <div>\r\n      <div className=\"videomagestyle\"></div>\r\n            <Row className=\"justify-content-center\">\r\n        <text className=\"stylemaincontent\" style={{ marginTop: \"-175px\" }}>\r\n          {\" \"}\r\n          فيديوهات\r\n        </text>\r\n      </Row>\r\n      { currentPosts.map(post => (\r\n        <Container fluid={true} className=\"text-center\" >\r\n\r\n          <Col xl={4} lg={4} md={6} sm={12} xs={12} className=\"videosmargin\" >\r\n            <div className=\"text-center\">\r\n              <ResponsiveEmbed\r\n                aspectRatio=\"16by9\"\r\n                className=\"iframcustom hvr-grow\">\r\n                <embed src={post.VideoLink} />\r\n              </ResponsiveEmbed>\r\n              <h6 className=\"videotitlestyle\">{post.VideoTitle}</h6>\r\n              <p className=\"videotextstyle\"> {post.VideoSummary}</p>\r\n            </div>\r\n          </Col>\r\n\r\n        </Container>\r\n\r\n      ))}\r\n    <Col xl={12} lg={12} md={12} sm={12} xs={12} className=\"text-center \">\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={posts.length}\r\n          paginate={paginate}\r\n        />\r\n      </Col>\r\n    </div>\r\n\r\n      </Fragment>\r\n\r\n  );\r\n\r\n}\r\nexport default Videos;\r\n"]},"metadata":{},"sourceType":"module"}