{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\n\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\n\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\n\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(forEachBookKeeping.forEachContext, child, i);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\n\n\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\n\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n  var keyUnique = !mapResult.hasOwnProperty(name);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(keyUnique, 'ReactChildren.map(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : null;\n  }\n\n  if (keyUnique) {\n    var mappedChild = mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\nmodule.exports = ReactChildren;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/ReactChildren.js"],"names":["PooledClass","require","ReactFragment","traverseAllChildren","warning","twoArgumentPooler","threeArgumentPooler","ForEachBookKeeping","forEachFunction","forEachContext","addPoolingTo","forEachSingleChild","traverseContext","child","name","i","forEachBookKeeping","call","forEachChildren","children","forEachFunc","getPooled","release","MapBookKeeping","mapResult","mapFunction","mapContext","mapSingleChildIntoContext","mapBookKeeping","keyUnique","hasOwnProperty","process","env","NODE_ENV","mappedChild","mapChildren","func","context","create","forEachSingleChildDummy","countChildren","ReactChildren","forEach","map","count","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n"]},"metadata":{},"sourceType":"script"}