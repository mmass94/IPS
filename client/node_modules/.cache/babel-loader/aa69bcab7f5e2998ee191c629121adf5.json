{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\AdminsList.js\";\n\n/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport \"../components/main.css\";\nimport Alert from \"./Alert\";\nimport { Link } from \"react-router-dom\";\nimport { deleteadmin } from \"../actions/auth\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../actions/alert\";\nimport updateadmin from \"./auth/UpdateAdmin\";\n\nconst AdminList = ({\n  auth: {\n    isAuthenticated\n  },\n  deleteadmin\n}) => {\n  const [posts, setposts] = useState([0]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(8);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/admins\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const deleteAdminFromList = postId => {\n    deleteadmin(postId);\n    setposts(prev => prev.filter(a => a._id !== postId));\n  };\n\n  const updateAdminFromList = postId => {\n    updateadmin(postId);\n    setposts(prev => prev.filter(a => a._id !== postId));\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\"); //Delete an admin\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \" Register new Admin\")), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Admin FullName\"))), currentPosts.map(post => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      updateAdminFromList(post._id);\n    },\n    className: \"btn btn-warning btn-sm\",\n    variant: \"outline-warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Update\")), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      deleteAdminFromList(post._id);\n    },\n    className: \"btn btn-danger btn-sm\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"Delete\"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, post.FullName)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, post.Username)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))));\n};\n\nAdminList.propTypes = {\n  adminlist: PropTypes.array.isRequired,\n  deleteadmin: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteadmin\n})(AdminList);","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/AdminsList.js"],"names":["React","Fragment","useEffect","useState","Table","Spinner","Pagination","axios","Alert","Link","deleteadmin","Button","PropTypes","connect","setAlert","updateadmin","AdminList","auth","isAuthenticated","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","deleteAdminFromList","postId","prev","filter","a","_id","updateAdminFromList","marginBottom","map","post","textAlign","color","FullName","Username","length","propTypes","adminlist","array","isRequired","func","object","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAAR;AAA6BR,EAAAA;AAA7B,CAAD,KAAgD;AAChE,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAlC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,CAAC,KAAD,CAAD,CAAtC;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACsB,YAAD,IAAiBtB,QAAQ,CAAC,CAAD,CAA/B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,UAAU,GAAG,YAAY;AAC7BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,kCAAV,CAAlB;AACAR,MAAAA,QAAQ,CAACO,GAAG,CAACE,IAAL,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAMAI,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT,CALgE,CAchE;;AACA,QAAMI,gBAAgB,GAAGP,WAAW,GAAGE,YAAvC;AACA,QAAMM,iBAAiB,GAAGD,gBAAgB,GAAGL,YAA7C;AACA,QAAMO,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,iBAAZ,EAA+BD,gBAA/B,CAArB,CAjBgE,CAmBhE;;AACA,QAAMI,QAAQ,GAAIC,UAAD,IAAgBX,cAAc,CAACW,UAAD,CAA/C;;AAEA,QAAMC,mBAAmB,GAAIC,MAAD,IAAY;AACtC3B,IAAAA,WAAW,CAAC2B,MAAD,CAAX;AACAjB,IAAAA,QAAQ,CAAEkB,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,MAA7B,CAAX,CAAR;AACD,GAHD;;AAKA,QAAMK,mBAAmB,GAAIL,MAAD,IAAY;AACtCtB,IAAAA,WAAW,CAACsB,MAAD,CAAX;AACAjB,IAAAA,QAAQ,CAAEkB,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,MAA7B,CAAX,CAAR;AACD,GAHD;;AAKA,MAAIhB,OAAJ,EACE,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,MADF,CAjC8D,CAwChE;;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEsB,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF,CADF,EASGX,YAAY,CAACY,GAAb,CAAkBC,IAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,mBAAmB,CAACG,IAAI,CAACJ,GAAN,CAAnB;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,wBAJZ;AAKE,IAAA,OAAO,EAAC,iBALV;AAME,IAAA,IAAI,EAAC,IANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,EASY,GATZ,CADF,eAaE;AAAI,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbV,MAAAA,mBAAmB,CAACS,IAAI,CAACJ,GAAN,CAAnB;AACD,KAHH;AAIE,IAAA,SAAS,EAAC,uBAJZ;AAKE,IAAA,IAAI,EAAC,IALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQY,GARZ,CAbF,eAwBE;AAAI,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,IAAI,CAACG,QAAzC,CADF,CAxBF,eA4BE;AAAI,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,IAAI,CAACI,QAAzC,CADF,CA5BF,CADF,CADD,CATH,CALF,eAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDF,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAExB,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAAC+B,MAFpB;AAGE,IAAA,QAAQ,EAAEhB,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApDF,CAHF,CADF;AAkED,CA3GD;;AA6GAlB,SAAS,CAACmC,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAExC,SAAS,CAACyC,KAAV,CAAgBC,UADP;AAEpB5C,EAAAA,WAAW,EAAEE,SAAS,CAAC2C,IAAV,CAAeD,UAFR;AAGpBrC,EAAAA,IAAI,EAAEL,SAAS,CAAC4C,MAAV,CAAiBF;AAHH,CAAtB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCzC,EAAAA,IAAI,EAAEyC,KAAK,CAACzC;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAAC4C,eAAD,EAAkB;AAAE/C,EAAAA;AAAF,CAAlB,CAAP,CAA0CM,SAA1C,CAAf","sourcesContent":["/** @format */\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport Pagination from \"../DashboardComponents/Pagenation\";\r\nimport axios from \"axios\";\r\nimport \"../components/main.css\";\r\nimport Alert from \"./Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteadmin } from \"../actions/auth\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../actions/alert\";\r\nimport updateadmin from \"./auth/UpdateAdmin\";\r\n\r\nconst AdminList = ({ auth: { isAuthenticated }, deleteadmin }) => {\r\n  const [posts, setposts] = useState([0]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/admins\");\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const deleteAdminFromList = (postId) => {\r\n    deleteadmin(postId);\r\n    setposts((prev) => prev.filter((a) => a._id !== postId));\r\n  };\r\n\r\n  const updateAdminFromList = (postId) => {\r\n    updateadmin(postId);\r\n    setposts((prev) => prev.filter((a) => a._id !== postId));\r\n  };\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n    );\r\n\r\n  //Delete an admin\r\n  return (\r\n    <Fragment>\r\n      <Alert />\r\n\r\n      <div>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          <Link to=\"/register\"> Register new Admin</Link>\r\n        </div>\r\n\r\n        <Table striped bordered>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"thcolor\">Update</th>\r\n              <th className=\"thcolor\">Delete</th>\r\n              <th className=\"thcolor\">Username</th>\r\n              <th className=\"thcolor\">Admin FullName</th>\r\n            </tr>\r\n          </thead>\r\n          {currentPosts.map((post) => (\r\n            <tbody>\r\n              <tr>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      updateAdminFromList(post._id);\r\n                    }}\r\n                    className=\"btn btn-warning btn-sm\"\r\n                    variant=\"outline-warning\"\r\n                    size=\"sm\">\r\n                    <text style={{ color: \"black\" }}>Update</text>\r\n                  </Button>{\" \"}\r\n                </td>\r\n\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      deleteAdminFromList(post._id);\r\n                    }}\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    size=\"sm\">\r\n                    Delete\r\n                  </Button>{\" \"}\r\n                </td>\r\n\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <text className=\"videotitlestyle \">{post.FullName}</text>\r\n                </td>\r\n\r\n                <td style={{ textAlign: \"center\" }}>\r\n                  <text className=\"videotitlestyle \">{post.Username}</text>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </Table>\r\n        <div></div>\r\n        <div>\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={posts.length}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAdminList.propTypes = {\r\n  adminlist: PropTypes.array.isRequired,\r\n  deleteadmin: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteadmin })(AdminList);\r\n"]},"metadata":{},"sourceType":"module"}