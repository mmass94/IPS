{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactClass = require(\"./ReactClass\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\n\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n  render: function () {\n    var props = {}; // Copy the props; except the mouse listeners if we're disabled\n\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMButton;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/ReactDOMButton.js"],"names":["AutoFocusMixin","require","ReactBrowserComponentMixin","ReactClass","ReactElement","keyMirror","button","createFactory","mouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","ReactDOMButton","createClass","displayName","tagName","mixins","render","props","key","hasOwnProperty","disabled","children","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,0BAA0B,GAAGD,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAIK,MAAM,GAAGF,YAAY,CAACG,aAAb,CAA2B,QAA3B,CAAb;AAEA,IAAIC,kBAAkB,GAAGH,SAAS,CAAC;AACjCI,EAAAA,OAAO,EAAE,IADwB;AAEjCC,EAAAA,aAAa,EAAE,IAFkB;AAGjCC,EAAAA,WAAW,EAAE,IAHoB;AAIjCC,EAAAA,WAAW,EAAE,IAJoB;AAKjCC,EAAAA,SAAS,EAAE,IALsB;AAMjCC,EAAAA,cAAc,EAAE,IANiB;AAOjCC,EAAAA,oBAAoB,EAAE,IAPW;AAQjCC,EAAAA,kBAAkB,EAAE,IARa;AASjCC,EAAAA,kBAAkB,EAAE,IATa;AAUjCC,EAAAA,gBAAgB,EAAE;AAVe,CAAD,CAAlC;AAaA;;;;;AAIA,IAAIC,cAAc,GAAGhB,UAAU,CAACiB,WAAX,CAAuB;AAC1CC,EAAAA,WAAW,EAAE,gBAD6B;AAE1CC,EAAAA,OAAO,EAAE,QAFiC;AAI1CC,EAAAA,MAAM,EAAE,CAACvB,cAAD,EAAiBE,0BAAjB,CAJkC;AAM1CsB,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,KAAK,GAAG,EAAZ,CADiB,CAGjB;;AACA,SAAK,IAAIC,GAAT,IAAgB,KAAKD,KAArB,EAA4B;AAC1B,UAAI,KAAKA,KAAL,CAAWE,cAAX,CAA0BD,GAA1B,MACC,CAAC,KAAKD,KAAL,CAAWG,QAAZ,IAAwB,CAACpB,kBAAkB,CAACkB,GAAD,CAD5C,CAAJ,EACwD;AACtDD,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAa,KAAKD,KAAL,CAAWC,GAAX,CAAb;AACD;AACF;;AAED,WAAOpB,MAAM,CAACmB,KAAD,EAAQ,KAAKA,KAAL,CAAWI,QAAnB,CAAb;AACD;AAlByC,CAAvB,CAArB;AAsBAC,MAAM,CAACC,OAAP,GAAiBZ,cAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n"]},"metadata":{},"sourceType":"script"}