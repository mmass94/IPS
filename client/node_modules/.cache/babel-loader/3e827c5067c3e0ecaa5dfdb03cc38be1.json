{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\nvar invariant = require(\"./invariant\");\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\n\n\nfunction toArray(obj) {\n  var length = obj.length; // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n\n  \"production\" !== process.env.NODE_ENV ? invariant(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function'), 'toArray: Array-like object expected') : invariant(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function'));\n  \"production\" !== process.env.NODE_ENV ? invariant(typeof length === 'number', 'toArray: Object needs a length property') : invariant(typeof length === 'number');\n  \"production\" !== process.env.NODE_ENV ? invariant(length === 0 || length - 1 in obj, 'toArray: Object should have keys for indices') : invariant(length === 0 || length - 1 in obj); // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {// IE < 9 does not support Array#slice on collections objects\n    }\n  } // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n\n\n  var ret = Array(length);\n\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n\n  return ret;\n}\n\nmodule.exports = toArray;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/toArray.js"],"names":["invariant","require","toArray","obj","length","process","env","NODE_ENV","Array","isArray","hasOwnProperty","prototype","slice","call","e","ret","ii","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;;;AASA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAjB,CADoB,CAGpB;AACA;;AACC,mBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChD,CAACQ,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAD,KACC,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAD3C,CADgD,EAGhD,qCAHgD,CAAjD,GAIGH,SAAS,CAAC,CAACQ,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAD,KACb,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAD7B,CAAD,CAJb;AAOC,mBAAiBE,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChD,OAAOI,MAAP,KAAkB,QAD8B,EAEhD,yCAFgD,CAAjD,GAGGJ,SAAS,CAAC,OAAOI,MAAP,KAAkB,QAAnB,CAHb;AAKC,mBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChDI,MAAM,KAAK,CAAX,IACCA,MAAM,GAAG,CAAV,IAAgBD,GAFgC,EAGhD,8CAHgD,CAAjD,GAIGH,SAAS,CAACI,MAAM,KAAK,CAAX,IACbA,MAAM,GAAG,CAAV,IAAgBD,GADH,CAJb,CAjBoB,CAwBpB;AACA;AACA;;AACA,MAAIA,GAAG,CAACO,cAAR,EAAwB;AACtB,QAAI;AACF,aAAOF,KAAK,CAACG,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BV,GAA3B,CAAP;AACD,KAFD,CAEE,OAAOW,CAAP,EAAU,CACV;AACD;AACF,GAjCmB,CAmCpB;AACA;;;AACA,MAAIC,GAAG,GAAGP,KAAK,CAACJ,MAAD,CAAf;;AACA,OAAK,IAAIY,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGZ,MAAtB,EAA8BY,EAAE,EAAhC,EAAoC;AAClCD,IAAAA,GAAG,CAACC,EAAD,CAAH,GAAUb,GAAG,CAACa,EAAD,CAAb;AACD;;AACD,SAAOD,GAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBhB,OAAjB","sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n"]},"metadata":{},"sourceType":"script"}