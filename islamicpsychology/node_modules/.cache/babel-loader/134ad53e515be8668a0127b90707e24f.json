{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\VideosList.js\";\n\n/** @format */\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Alert from \"./Alert\";\nimport Table from \"react-bootstrap/Table\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport \"../components/main.css\";\nimport { deletevideo } from \"../actions/Video\";\nimport { updateVideo } from \"../actions/Video\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst VideosList = ({\n  deletevideo\n}) => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(7);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const deleteVideoFromList = postId => {\n    deletevideo(postId);\n    setposts(prev => prev.filter(a => a._id !== postId));\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"...Loading\"), \";\"); //Delete and update a video\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Video Title\"))), currentPosts.map(post => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => /*#__PURE__*/React.createElement(Link, {\n      to: \"/UpdateVideo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 55\n      }\n    }, \" \"),\n    className: \"btn btn-warning btn-sm\",\n    variant: \"outline-warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, \"Update\")), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deleteVideoFromList(post._id),\n    className: \"btn btn-danger btn-sm\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \" Delete\"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, post.VideoTitle)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/AddVideo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \" Add new Video\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/UpdateVideo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 14\n    }\n  }, \" Add new Video\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }))));\n};\n\nVideosList.propTypes = {\n  videolist: PropTypes.array.isRequired,\n  deletevideo: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deletevideo\n})(VideosList);","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/VideosList.js"],"names":["React","useEffect","useState","Fragment","Alert","Table","Spinner","Pagination","axios","deletevideo","updateVideo","Link","Button","PropTypes","connect","VideosList","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","deleteVideoFromList","postId","prev","filter","a","_id","map","post","textAlign","color","VideoTitle","length","propTypes","videolist","array","isRequired","func"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React, { useEffect, useState,Fragment } from \"react\";\r\nimport Alert from \"./Alert\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Spinner from \"../components/layout/Spinner\"\r\nimport Pagination from \"../DashboardComponents/Pagenation\"\r\nimport axios from \"axios\"; import \"../components/main.css\";\r\nimport { deletevideo } from \"../actions/Video\"\r\nimport { updateVideo } from \"../actions/Video\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nconst VideosList = ({ deletevideo }) => {\r\n    const [posts, setposts] = useState([]);\r\n    const [loading, setLoading] = useState([false]);\r\n    const [CurrentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(7);\r\n    useEffect(() => {\r\n\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            const res = await axios\r\n                .get(\"http://localhost:5000/api/videos\")\r\n            setposts(res.data);\r\n            setLoading(false);\r\n        }\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    // get Current Posts\r\n    const indexOfLastVideo = CurrentPage * postsPerPage;\r\n    const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n    //change Page \r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const deleteVideoFromList = (postId) => {\r\n        deletevideo(postId);\r\n        setposts(prev => prev.filter(a => a._id !== postId));\r\n    }\r\n\r\n    if (loading)\r\n        return (\r\n            <div>\r\n                <Spinner />\r\n                <h6 className=\"text-center\">...Loading</h6>;\r\n            </div>\r\n        )\r\n\r\n    //Delete and update a video\r\n    return (\r\n         <Fragment>\r\n      <Alert />\r\n        < div >\r\n            <Table striped bordered >\r\n                <thead >\r\n                    <tr >\r\n                        <th className=\"thcolor\">Update</th>\r\n                        <th className=\"thcolor\" >Delete</th>\r\n                        <th className=\"thcolor\" >Video Title</th>\r\n                    </tr>\r\n                </thead>\r\n                {currentPosts.map(post => (\r\n\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <Button onClick={() =><Link to=\"/UpdateVideo\"> </Link >} \r\n                                className=\"btn btn-warning btn-sm\"\r\n                                    variant=\"outline-warning\"\r\n                                    size=\"sm\"\r\n                                >\r\n                                    <text style={{ color: \"black\" }}>Update</text>\r\n                                </Button>{\" \"}\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: \"center\" }}>\r\n\r\n                                <Button onClick={() => deleteVideoFromList(post._id)\r\n\r\n                                } className=\"btn btn-danger btn-sm\"\r\n                                    size=\"sm\"\r\n                                > Delete\r\n                                  </Button>{\" \"}\r\n\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <text className=\"videotitlestyle \" >{post.VideoTitle}</text>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                ))}\r\n            </Table>\r\n         <div>  \r\n              <Link to=\"/AddVideo\"> Add new Video</Link >\r\n             <Link to=\"/UpdateVideo\"> Add new Video</Link >\r\n\r\n            </div>\r\n            <div>\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={posts.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </div >\r\n    </Fragment>\r\n\r\n    );\r\n}\r\n\r\nVideosList.propTypes = {\r\n    videolist: PropTypes.array.isRequired,\r\n    deletevideo: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default connect(null, {deletevideo})(VideosList)"]},"metadata":{},"sourceType":"module"}