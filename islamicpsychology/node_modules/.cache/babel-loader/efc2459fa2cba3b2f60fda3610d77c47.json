{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\AdminsList.js\";\n\n/** @format */\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\nimport axios from \"axios\";\nimport \"../components/main.css\";\nimport Alert from \"./Alert\";\nimport { Link } from \"react-router-dom\";\nimport { deleteadmin } from \"../actions/auth\";\nimport { updateadmin } from \"../actions/auth\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { post } from \"request\";\nimport { setAlert } from \"../actions/alert\";\n\nconst AdminList = ({\n  auth: {\n    isAuthenticated\n  },\n  deleteadmin\n}) => {\n  const [posts, setposts] = useState([0]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(8);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/admins\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const deleteAdminFromList = postId => {\n    deleteadmin(postId);\n    setposts(prev => prev.filter(a => a._id !== postId));\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: post.id,\n      FullName: post.FullName,\n      Username: post.Username,\n      Password: post.Password,\n      published: status\n    };\n    TutorialDataService.update(post.id, data).then(response => {\n      setCurrentTutorial({ ...post,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateTutorial = () => {\n    TutorialDataService.update(post.id, post).then(response => {\n      console.log(response.data);\n      setAlert(\"Admin infos has been updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"...Loading\"), \";\"); //Delete an admin\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \" Register new Admin\")), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"thcolor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Admin FullName\"))), currentPosts.map(post => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-warning btn-sm\",\n    variant: \"outline-warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, \"Update\")), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      deleteAdminFromList(post._id);\n    },\n    className: \"btn btn-danger btn-sm\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, \"Delete\"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, post.FullName)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"videotitlestyle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, post.Username)))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }))));\n};\n\nAdminList.propTypes = {\n  adminlist: PropTypes.array.isRequired,\n  deleteadmin: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteadmin\n})(AdminList);","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/AdminsList.js"],"names":["React","Fragment","useEffect","useState","BrowserRouter","Router","Route","Switch","Table","Spinner","Pagination","axios","Alert","Link","deleteadmin","updateadmin","Button","PropTypes","connect","post","setAlert","AdminList","auth","isAuthenticated","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","deleteAdminFromList","postId","prev","filter","a","_id","updatePublished","status","id","FullName","Username","Password","published","TutorialDataService","update","then","response","setCurrentTutorial","console","log","catch","e","updateTutorial","marginBottom","map","textAlign","color","length","propTypes","adminlist","array","isRequired","func","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["/** @format */\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Spinner from \"../components/layout/Spinner\"\r\nimport Pagination from \"../DashboardComponents/Pagenation\"\r\nimport axios from \"axios\"; import \"../components/main.css\";\r\nimport Alert from \"./Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteadmin } from \"../actions/auth\"\r\nimport { updateadmin } from \"../actions/auth\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { post } from \"request\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nconst AdminList = ({ auth: { isAuthenticated }, deleteadmin }) => {\r\n\r\n    const [posts, setposts] = useState([0]);\r\n    const [loading, setLoading] = useState([false]);\r\n    const [CurrentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(8);\r\n    useEffect(() => {\r\n\r\n        const fetchPosts = async () => {\r\n            setLoading(true);\r\n            const res = await axios\r\n                .get(\"http://localhost:5000/api/admins\")\r\n            setposts(res.data);\r\n            setLoading(false);\r\n        }\r\n        fetchPosts();\r\n    }, []);\r\n    // get Current Posts\r\n    const indexOfLastVideo = CurrentPage * postsPerPage;\r\n    const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n    //change Page \r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const deleteAdminFromList = (postId) => {\r\n        deleteadmin(postId);\r\n        setposts(prev => prev.filter(a => a._id !== postId));\r\n    }\r\n\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      id: post.id,\r\n      FullName: post.FullName,\r\n      Username: post.Username,\r\n      Password: post.Password,\r\n\r\n      published: status\r\n    }\r\n\r\n        TutorialDataService.update(post.id, data)\r\n      .then(response => {\r\n        setCurrentTutorial({ ...post, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateTutorial = () => {\r\n    TutorialDataService.update(post.id, post)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setAlert(\"Admin infos has been updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n    if (loading)\r\n        return (\r\n            <div>\r\n                <Spinner />\r\n                <h6 className=\"text-center\">...Loading</h6>;\r\n            </div>\r\n        )\r\n\r\n    //Delete an admin\r\n    return (\r\n            <Fragment>\r\n             <Alert />\r\n\r\n        <div >\r\n            <div style={{marginBottom:\"30px\"}}>\r\n            <Link to=\"/register\"> Register new Admin</Link >\r\n            </div>\r\n\r\n            <Table striped bordered >\r\n                <thead >\r\n                    <tr >\r\n                        <th className=\"thcolor\">Update</th>\r\n                        <th className=\"thcolor\" >Delete</th>\r\n                        <th className=\"thcolor\" >Username</th>\r\n                        <th className=\"thcolor\" >Admin FullName</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {currentPosts.map(post => (\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <Button  className=\"btn btn-warning btn-sm\"\r\n                                    variant=\"outline-warning\"\r\n                                    size=\"sm\"\r\n                                >\r\n                                    <text style={{ color: \"black\" }}>Update</text>\r\n                                </Button >{\" \"}\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: \"center\" }}>\r\n\r\n                                <Button onClick={() => { deleteAdminFromList(post._id) }} className=\"btn btn-danger btn-sm\"\r\n                                    size=\"sm\"\r\n                                >\r\n                                    Delete\r\n            </Button>{\" \"}\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <text className=\"videotitlestyle \" >{post.FullName}</text>\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <text className=\"videotitlestyle \" >{post.Username}</text>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                ))}\r\n            </Table>\r\n            <div>\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={posts.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </div>\r\n            </Fragment>\r\n\r\n    );\r\n}\r\n\r\nAdminList.propTypes = {\r\n    adminlist: PropTypes.array.isRequired,\r\n    deleteadmin: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteadmin})(AdminList)"]},"metadata":{},"sourceType":"module"}