{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\DashboardComponents\\\\Fetch.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Videos from \"../Pages/Videos\";\nimport Pagination from \"./Pagenation\";\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport { laodUser } from \"../actions/auth\";\n\nconst Fetch = () => {\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, SetCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  useEffect(() => {\n    store.dispatch(laodUser());\n\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/videos\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); //get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page \n\n  const paginate = pageNumber => {\n    SetCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Videos, {\n    posts: currentPosts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Fetch;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/DashboardComponents/Fetch.js"],"names":["React","Fragment","useEffect","useState","Videos","Pagination","axios","Provider","store","laodUser","Fetch","posts","setposts","loading","setLoading","CurrentPage","SetCurrentPage","postsPerPage","dispatch","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAC,KAAD,CAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,YAAD,IAAiBd,QAAQ,CAAC,CAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACU,QAAN,CAAeT,QAAQ,EAAvB;;AAEA,UAAMU,UAAU,GAAG,YAAY;AAC7BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAG,MAAMd,KAAK,CACpBe,GADe,CACX,kCADW,CAAlB;AAEAT,MAAAA,QAAQ,CAACQ,GAAG,CAACE,IAAL,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAND;;AAOAK,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT,CANkB,CAoBlB;;AACA,QAAMI,gBAAgB,GAAGR,WAAW,GAAGE,YAAvC;AACA,QAAMO,iBAAiB,GAAGD,gBAAgB,GAAGN,YAA7C;AACA,QAAMQ,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,iBAAZ,EAA+BD,gBAA/B,CAArB,CAvBkB,CAyBlB;;AAEA,QAAMI,QAAQ,GAAIC,UAAD,IAAgB;AAC/BZ,IAAAA,cAAc,CAACY,UAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,YAAf;AAA6B,IAAA,OAAO,EAAEZ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACkB,MAFpB;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAYD,CA3CD;;AA6CA,eAAejB,KAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Videos from \"../Pages/Videos\"\r\nimport Pagination from \"./Pagenation\"\r\nimport axios from \"axios\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport { laodUser } from \"../actions/auth\";\r\n\r\n\r\nconst Fetch = () => {\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, SetCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(2);\r\n\r\n  useEffect(() => {\r\n    store.dispatch(laodUser());\r\n\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios\r\n        .get(\"http://localhost:5000/api/videos\")\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    }\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  //get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page \r\n\r\n  const paginate = (pageNumber) => {\r\n    SetCurrentPage(pageNumber)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Videos posts={currentPosts} loading={loading} />\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Fetch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}