{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apollo\\\\islamicpsychologyapi\\\\islamicpsychology\\\\src\\\\Pages\\\\Articles.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Maincontent from \"../components/Maincontent\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../components/main.css\";\nimport Spinner from \"../components/layout/Spinner\";\nimport Pagination from \"../DashboardComponents/Pagenation\";\n\nconst Articles = () => {\n  const DATE_OPTIONS = {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  };\n  const currentdate = new Date().toLocaleDateString(\"en-US\", DATE_OPTIONS);\n  const [posts, setposts] = useState([]);\n  const [loading, setLoading] = useState([false]);\n  const [CurrentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(9);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"http://localhost:5000/api/articles\");\n      setposts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // get Current Posts\n\n  const indexOfLastVideo = CurrentPage * postsPerPage;\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo); //change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"...Loading\"), \";\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articlemagestyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), currentPosts.map(post => /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 4,\n    lg: 4,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    className: \"text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"350px\",\n      width: \"300px\",\n      borderStyle: \"dotted\",\n      borderColor: \"green\",\n      backgroundImage: `url(\"../assets/images/article1.jpg\")`,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"articletitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, post.ArticleTitle, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \" articletextstyle displayinline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, post.ArticleAuthor, \" | \", currentdate), \"|\", \" \", /*#__PURE__*/React.createElement(\"p\", {\n    className: \" displayinline  articleResource\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \" \", post.ArticleSource, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"articlemaxwidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, post.ArticleOverview), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"downarticle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articlerectangle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/Article\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    size: \"sm\",\n    className: \"buttonposition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, \"\\u0627\\u0642\\u0631\\u0623 \\u0627\\u0644\\u0645\\u0632\\u064A\\u062F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"articlerectangle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Articles;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/Pages/Articles.js"],"names":["React","Fragment","useEffect","useState","Maincontent","Container","axios","Row","Col","Button","Spinner","Pagination","Articles","DATE_OPTIONS","weekday","year","month","day","hour","minute","second","currentdate","Date","toLocaleDateString","posts","setposts","loading","setLoading","CurrentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastVideo","indexOfFirstVideo","currentPosts","slice","paginate","pageNumber","map","post","height","width","borderStyle","borderColor","backgroundImage","backgroundSize","backgroundRepeat","marginLeft","marginRight","ArticleTitle","ArticleAuthor","ArticleSource","ArticleOverview","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Maincontent from \"../components/Maincontent\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport axios from \"axios\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../components/main.css\";\r\nimport Spinner from \"../components/layout/Spinner\";\r\nimport Pagination from \"../DashboardComponents/Pagenation\";\r\n\r\nconst Articles = () => {\r\n  const DATE_OPTIONS = {\r\n    weekday: \"short\",\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n  };\r\n  const currentdate = new Date().toLocaleDateString(\"en-US\", DATE_OPTIONS);\r\n\r\n  const [posts, setposts] = useState([]);\r\n  const [loading, setLoading] = useState([false]);\r\n  const [CurrentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(9);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"http://localhost:5000/api/articles\");\r\n      setposts(res.data);\r\n      setLoading(false);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // get Current Posts\r\n  const indexOfLastVideo = CurrentPage * postsPerPage;\r\n  const indexOfFirstVideo = indexOfLastVideo - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstVideo, indexOfLastVideo);\r\n\r\n  //change Page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n        <h6 className=\"text-center\">...Loading</h6>;\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"articlemagestyle\"></div>\r\n      {currentPosts.map((post) => (\r\n        <Container fluid>\r\n          <Row className=\"justify-content-center \">\r\n            <Col xl={4} lg={4} md={6} sm={12} xs={12} className=\"text-center \">\r\n              <div\r\n                style={{\r\n                  height: \"350px\",\r\n                  width: \"300px\",\r\n                  borderStyle: \"dotted\",\r\n                  borderColor: \"green\",\r\n                  backgroundImage: `url(\"../assets/images/article1.jpg\")`,\r\n                  backgroundSize: \"cover\",\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                }}>\r\n                {\" \"}\r\n              </div>\r\n              <h4 className=\"articletitle\">{post.ArticleTitle} </h4>\r\n              <p className=\" articletextstyle displayinline\">\r\n                {post.ArticleAuthor} | {currentdate}\r\n              </p>\r\n              |{\" \"}\r\n              <p className=\" displayinline  articleResource\">\r\n                {\" \"}\r\n                {post.ArticleSource}{\" \"}\r\n              </p>\r\n              <p className=\"articlemaxwidth\">{post.ArticleOverview}</p>\r\n              <div className=\"downarticle\">\r\n                <div className=\"articlerectangle\"></div>\r\n                <a href=\"/Article\" rel=\"noopener noreferrer\">\r\n                  <Button\r\n                    variant=\"outline-success\"\r\n                    size=\"sm\"\r\n                    className=\"buttonposition\">\r\n                    اقرأ المزيد\r\n                  </Button>\r\n                </a>\r\n\r\n                <div className=\"articlerectangle2\"></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ))}\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n"]},"metadata":{},"sourceType":"module"}