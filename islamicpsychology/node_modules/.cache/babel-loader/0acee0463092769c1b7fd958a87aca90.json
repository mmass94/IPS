{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n    return markup.replace('>', ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">');\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\nmodule.exports = ReactMarkupChecksum;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/ReactMarkupChecksum.js"],"names":["adler32","require","ReactMarkupChecksum","CHECKSUM_ATTR_NAME","addChecksumToMarkup","markup","checksum","replace","canReuseMarkup","element","existingChecksum","getAttribute","parseInt","markupChecksum","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAIC,mBAAmB,GAAG;AACxBC,EAAAA,kBAAkB,EAAE,qBADI;;AAGxB;;;;AAIAC,EAAAA,mBAAmB,EAAE,UAASC,MAAT,EAAiB;AACpC,QAAIC,QAAQ,GAAGN,OAAO,CAACK,MAAD,CAAtB;AACA,WAAOA,MAAM,CAACE,OAAP,CACL,GADK,EAEL,MAAML,mBAAmB,CAACC,kBAA1B,GAA+C,IAA/C,GAAsDG,QAAtD,GAAiE,IAF5D,CAAP;AAID,GAbuB;;AAexB;;;;;AAKAE,EAAAA,cAAc,EAAE,UAASH,MAAT,EAAiBI,OAAjB,EAA0B;AACxC,QAAIC,gBAAgB,GAAGD,OAAO,CAACE,YAAR,CACrBT,mBAAmB,CAACC,kBADC,CAAvB;AAGAO,IAAAA,gBAAgB,GAAGA,gBAAgB,IAAIE,QAAQ,CAACF,gBAAD,EAAmB,EAAnB,CAA/C;AACA,QAAIG,cAAc,GAAGb,OAAO,CAACK,MAAD,CAA5B;AACA,WAAOQ,cAAc,KAAKH,gBAA1B;AACD;AA3BuB,CAA1B;AA8BAI,MAAM,CAACC,OAAP,GAAiBb,mBAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n"]},"metadata":{},"sourceType":"script"}