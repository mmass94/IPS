{"ast":null,"code":"/** @format */\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { VIDEO_ERROR, VIDEO_ADDED, UPDATE_VIDEO, Delete_ERROR } from \"./types\"; // ADD VIDEO\n\nexport const addVideo = (VideoLink, VideoTitle, VideoSummary) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    VideoLink,\n    VideoTitle,\n    VideoSummary\n  });\n\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/Videos\", body, config);\n    dispatch({\n      type: VIDEO_ADDED,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Video has been added\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: VIDEO_ERROR\n    });\n  }\n}; //Delete a Video\n\nexport const deletevideo = id => async dispatch => {\n  if (window.confirm('Are you sure ? this is can NOT be undone!')) {\n    try {\n      const res = await axios.delete(`http://localhost:5000/api/videos/${id}`);\n      dispatch({\n        type: UPDATE_VIDEO,\n        payload: res.data\n      });\n      dispatch(setAlert(\"Video Deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: Delete_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/islamicpsychology/src/actions/Video.js"],"names":["axios","setAlert","VIDEO_ERROR","VIDEO_ADDED","UPDATE_VIDEO","Delete_ERROR","addVideo","VideoLink","VideoTitle","VideoSummary","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg","deletevideo","id","window","confirm","delete","statusText","status"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,SAArE,C,CAEA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,KAAyC,OAC/DC,QAD+D,KAE5D;AACH,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAf,CAAb;;AACA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAChB,kCADgB,EAEhBJ,IAFgB,EAGhBF,MAHgB,CAAlB;AAMAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf,WADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAACT,QAAQ,CAAC,sBAAD,EAAyB,SAAzB,CAAT,CAAR;AACD,GAZD,CAYE,OAAOoB,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWf,QAAQ,CAACT,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAGD;AACF,CA/BM,C,CAkCP;;AACA,OAAO,MAAMyB,WAAW,GAAGC,EAAE,IAAI,MAAMlB,QAAN,IAAkB;AACjD,MAAImB,MAAM,CAACC,OAAP,CAAe,2CAAf,CAAJ,EAAiE;AAE/D,QAAI;AACF,YAAMd,GAAG,GAAG,MAAMhB,KAAK,CAAC+B,MAAN,CAAc,oCAAmCH,EAAG,EAApD,CAAlB;AACAlB,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEd,YADC;AAEPe,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAMAV,MAAAA,QAAQ,CAACT,QAAQ,CAAC,eAAD,EAAkB,SAAlB,CAAT,CAAR;AAED,KAVD,CAUE,OAAOoB,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAEPQ,QAAAA,IAAI,EAAEb,YAFC;AAGPc,QAAAA,OAAO,EAAE;AAAEO,UAAAA,GAAG,EAAEL,GAAG,CAACE,QAAJ,CAAaS,UAApB;AAAgCC,UAAAA,MAAM,EAAEZ,GAAG,CAACE,QAAJ,CAAaU;AAArD;AAHF,OAAD,CAAR;AAMD;AACF;AAEF,CAvBM","sourcesContent":["/** @format */\r\n\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { VIDEO_ERROR, VIDEO_ADDED, UPDATE_VIDEO, Delete_ERROR } from \"./types\";\r\n\r\n// ADD VIDEO\r\n\r\nexport const addVideo = (VideoLink, VideoTitle, VideoSummary) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ VideoLink, VideoTitle, VideoSummary });\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/api/Videos\",\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: VIDEO_ADDED,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Video has been added\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: VIDEO_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n//Delete a Video\r\nexport const deletevideo = id => async dispatch => {\r\n  if (window.confirm('Are you sure ? this is can NOT be undone!')) {\r\n\r\n    try {\r\n      const res = await axios.delete(`http://localhost:5000/api/videos/${id}`);\r\n      dispatch({\r\n        type: UPDATE_VIDEO,\r\n        payload: res.data,\r\n\r\n\r\n      });\r\n      dispatch(setAlert(\"Video Deleted\", \"success\"));\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n\r\n        type: Delete_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}