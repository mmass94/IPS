{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactClass = require(\"./ReactClass\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\n\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n  mixins: [ReactBrowserComponentMixin],\n  componentWillMount: function () {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? warning(this.props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : null;\n    }\n  },\n  render: function () {\n    return option(this.props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMOption;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/ReactDOMOption.js"],"names":["ReactBrowserComponentMixin","require","ReactClass","ReactElement","warning","option","createFactory","ReactDOMOption","createClass","displayName","tagName","mixins","componentWillMount","process","env","NODE_ENV","props","selected","render","children","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAII,MAAM,GAAGF,YAAY,CAACG,aAAb,CAA2B,QAA3B,CAAb;AAEA;;;;AAGA,IAAIC,cAAc,GAAGL,UAAU,CAACM,WAAX,CAAuB;AAC1CC,EAAAA,WAAW,EAAE,gBAD6B;AAE1CC,EAAAA,OAAO,EAAE,QAFiC;AAI1CC,EAAAA,MAAM,EAAE,CAACX,0BAAD,CAJkC;AAM1CY,EAAAA,kBAAkB,EAAE,YAAW;AAC7B;AACA,QAAI,iBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACxC,uBAAiBF,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCX,OAAO,CAC9C,KAAKY,KAAL,CAAWC,QAAX,IAAuB,IADuB,EAE9C,oEACA,iCAH8C,CAA/C,GAIG,IAJJ;AAKD;AACF,GAfyC;AAiB1CC,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAOb,MAAM,CAAC,KAAKW,KAAN,EAAa,KAAKA,KAAL,CAAWG,QAAxB,CAAb;AACD;AAnByC,CAAvB,CAArB;AAuBAC,MAAM,CAACC,OAAP,GAAiBd,cAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n"]},"metadata":{},"sourceType":"script"}