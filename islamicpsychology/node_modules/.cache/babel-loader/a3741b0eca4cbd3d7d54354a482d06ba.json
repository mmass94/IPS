{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\n\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\n\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\"); // To avoid a cyclic dependency, we create the final class in this module\n\n\nvar ReactCompositeComponentWrapper = function () {};\n\nassign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\n\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\n\n\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? warning(element && (typeof element.type === 'function' || typeof element.type === 'string'), 'Only functions or strings can be mounted as React components.') : null;\n    } // Special case string values\n\n\n    if (parentCompositeType === element.type && typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element); // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    \"production\" !== process.env.NODE_ENV ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false);\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : null;\n  } // Sets up the instance. This can probably just move into the constructor now.\n\n\n  instance.construct(node); // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  } // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/instantiateReactComponent.js"],"names":["ReactCompositeComponent","require","ReactEmptyComponent","ReactNativeComponent","assign","invariant","warning","ReactCompositeComponentWrapper","prototype","Mixin","_instantiateReactComponent","instantiateReactComponent","isInternalComponentType","type","mountComponent","receiveComponent","node","parentCompositeType","instance","emptyElement","element","process","env","NODE_ENV","createInternalComponent","createInstanceForText","construct","unmountComponent","_mountIndex","_mountImage","_isOwnerNecessary","_warnedAboutRefsInRender","Object","preventExtensions","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype !== 'undefined' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n"]},"metadata":{},"sourceType":"script"}