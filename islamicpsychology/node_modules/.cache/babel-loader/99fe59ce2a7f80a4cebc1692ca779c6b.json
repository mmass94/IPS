{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\n\nvar warning = require(\"./warning\");\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\n\n\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : null;\n  }\n\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\n\n\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/flattenChildren.js"],"names":["traverseAllChildren","require","warning","flattenSingleChildIntoContext","traverseContext","child","name","result","keyUnique","hasOwnProperty","process","env","NODE_ENV","flattenChildren","children","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;AAEA;;;;;;;AAKA,SAASE,6BAAT,CAAuCC,eAAvC,EAAwDC,KAAxD,EAA+DC,IAA/D,EAAqE;AACnE;AACA,MAAIC,MAAM,GAAGH,eAAb;AACA,MAAII,SAAS,GAAG,CAACD,MAAM,CAACE,cAAP,CAAsBH,IAAtB,CAAjB;;AACA,MAAI,iBAAiBI,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACxC,qBAAiBF,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCV,OAAO,CAC9CM,SAD8C,EAE9C,uEACA,uEADA,GAEA,+BAJ8C,EAK9CF,IAL8C,CAA/C,GAMG,IANJ;AAOD;;AACD,MAAIE,SAAS,IAAIH,KAAK,IAAI,IAA1B,EAAgC;AAC9BE,IAAAA,MAAM,CAACD,IAAD,CAAN,GAAeD,KAAf;AACD;AACF;AAED;;;;;;;AAKA,SAASQ,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,MAAIP,MAAM,GAAG,EAAb;AACAP,EAAAA,mBAAmB,CAACc,QAAD,EAAWX,6BAAX,EAA0CI,MAA1C,CAAnB;AACA,SAAOA,MAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBH,eAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n"]},"metadata":{},"sourceType":"script"}