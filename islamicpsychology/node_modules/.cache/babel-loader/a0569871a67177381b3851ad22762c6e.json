{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\nvar isTextNode = require(\"./isTextNode\");\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\n\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/containsNode.js"],"names":["isTextNode","require","containsNode","outerNode","innerNode","parentNode","contains","compareDocumentPosition","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;AAEA;;AAEA;;;;;;;;;AAOA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA4C;AAC1C,MAAI,CAACD,SAAD,IAAc,CAACC,SAAnB,EAA8B;AAC5B,WAAO,KAAP;AACD,GAFD,MAEO,IAAID,SAAS,KAAKC,SAAlB,EAA6B;AAClC,WAAO,IAAP;AACD,GAFM,MAEA,IAAIJ,UAAU,CAACG,SAAD,CAAd,EAA2B;AAChC,WAAO,KAAP;AACD,GAFM,MAEA,IAAIH,UAAU,CAACI,SAAD,CAAd,EAA2B;AAChC,WAAOF,YAAY,CAACC,SAAD,EAAYC,SAAS,CAACC,UAAtB,CAAnB;AACD,GAFM,MAEA,IAAIF,SAAS,CAACG,QAAd,EAAwB;AAC7B,WAAOH,SAAS,CAACG,QAAV,CAAmBF,SAAnB,CAAP;AACD,GAFM,MAEA,IAAID,SAAS,CAACI,uBAAd,EAAuC;AAC5C,WAAO,CAAC,EAAEJ,SAAS,CAACI,uBAAV,CAAkCH,SAAlC,IAA+C,EAAjD,CAAR;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,YAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = require(\"./isTextNode\");\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n"]},"metadata":{},"sourceType":"script"}