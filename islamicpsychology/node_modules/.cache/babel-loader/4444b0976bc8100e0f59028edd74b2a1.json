{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\n\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\n\nvar isNode = require(\"./isNode\");\n\nvar warning = require(\"./warning\");\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\n\n\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null) {\n      \"production\" !== process.env.NODE_ENV ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : null;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n\n  \"production\" !== process.env.NODE_ENV ? invariant(componentOrElement.render == null || typeof componentOrElement.render !== 'function', 'Component (with keys: %s) contains `render` method ' + 'but is not mounted in the DOM', Object.keys(componentOrElement)) : invariant(componentOrElement.render == null || typeof componentOrElement.render !== 'function');\n  \"production\" !== process.env.NODE_ENV ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false);\n}\n\nmodule.exports = findDOMNode;","map":{"version":3,"sources":["C:/Users/apollo/islamicpsychologyapi/node_modules/react/lib/findDOMNode.js"],"names":["ReactCurrentOwner","require","ReactInstanceMap","ReactMount","invariant","isNode","warning","findDOMNode","componentOrElement","process","env","NODE_ENV","owner","current","_warnedAboutRefsInRender","getName","has","getNodeFromInstance","render","Object","keys","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAArB;AAEA;;;;;;;;AAMA,SAASM,WAAT,CAAqBC,kBAArB,EAAyC;AACvC,MAAI,iBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACzC,QAAIC,KAAK,GAAGZ,iBAAiB,CAACa,OAA9B;;AACA,QAAID,KAAK,KAAK,IAAd,EAAoB;AACjB,uBAAiBH,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCL,OAAO,CAC9CM,KAAK,CAACE,wBADwC,EAE9C,oEACA,mEADA,GAEA,oEAFA,GAGA,iEAHA,GAIA,6BAN8C,EAO9CF,KAAK,CAACG,OAAN,MAAmB,aAP2B,CAA/C,GAQG,IARJ;AASAH,MAAAA,KAAK,CAACE,wBAAN,GAAiC,IAAjC;AACD;AACF;;AACD,MAAIN,kBAAkB,IAAI,IAA1B,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAIH,MAAM,CAACG,kBAAD,CAAV,EAAgC;AAC9B,WAAOA,kBAAP;AACD;;AACD,MAAIN,gBAAgB,CAACc,GAAjB,CAAqBR,kBAArB,CAAJ,EAA8C;AAC5C,WAAOL,UAAU,CAACc,mBAAX,CAA+BT,kBAA/B,CAAP;AACD;;AACA,mBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChDI,kBAAkB,CAACU,MAAnB,IAA6B,IAA7B,IACA,OAAOV,kBAAkB,CAACU,MAA1B,KAAqC,UAFW,EAGhD,wDACA,+BAJgD,EAKhDC,MAAM,CAACC,IAAP,CAAYZ,kBAAZ,CALgD,CAAjD,GAMGJ,SAAS,CAACI,kBAAkB,CAACU,MAAnB,IAA6B,IAA7B,IACd,OAAOV,kBAAkB,CAACU,MAA1B,KAAqC,UADxB,CANb;AAQC,mBAAiBT,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChD,KADgD,EAEhD,qEAFgD,EAGhDe,MAAM,CAACC,IAAP,CAAYZ,kBAAZ,CAHgD,CAAjD,GAIGJ,SAAS,CAAC,KAAD,CAJb;AAKD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBf,WAAjB","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\nvar isNode = require(\"./isNode\");\nvar warning = require(\"./warning\");\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n"]},"metadata":{},"sourceType":"script"}